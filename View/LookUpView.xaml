<controls:DialogWindow xmlns:controls="clr-namespace:Ascon.Pilot.Theme.Controls;assembly=Ascon.Pilot.Theme"
                       x:Class="PilotLookUp.View.LookUpView"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:local="clr-namespace:PilotLookUp.View"
                       mc:Ignorable="d"
                       d:DesignHeight="450"
                       d:DesignWidth="800"
                       Title="PilotLookUp"
                       ShowInTaskbar="True">

    <!-- Экспорт словарей ресурсов Pilot -->
    <controls:DialogWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Resources\StyleDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Стиль кнопок -->
            <Style TargetType="{x:Type Button}"
                   x:Key="Button_Style">
                <Setter Property="Background"
                        Value="#86609B" />
                <Setter Property="Foreground"
                        Value="White" />
                <Setter Property="FontSize"
                        Value="11" />
                <Setter Property="FontFamily"
                        Value="./#Segoe UI" />
                <Setter Property="SnapsToDevicePixels"
                        Value="True" />
                <Setter Property="Margin"
                        Value="0,5,0,0" />
                <Setter Property="HorizontalAlignment"
                        Value="Right" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="0"
                                    Background="{TemplateBinding Background}">
                                <Grid>
                                    <ContentPresenter x:Name="MyContentPresenter"
                                                      Content="{TemplateBinding Content}"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Margin="0,0,0,0" />
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="#86509B" />
                                    <Setter Property="Foreground"
                                            Value="White" />
                                </Trigger>

                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="#86309B" />
                                    <Setter Property="Foreground"
                                            Value="White" />
                                </Trigger>

                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Background"
                                            Value="LightGray" />
                                    <Setter Property="Foreground"
                                            Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="Black" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Background="{TemplateBinding Background}"
                                    Padding="5">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <!-- Триггер для выделенного элемента -->
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="#D283E6" />
                                    <!-- Светло-голубой -->
                                    <Setter Property="Foreground"
                                            Value="Black" />
                                </Trigger>
                                <!-- Триггер для наведения мыши -->
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="#DCB2E6" />
                                    <!-- Цвет при наведении -->
                                    <Setter Property="Foreground"
                                            Value="Black" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </controls:DialogWindow.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" />

        <Grid Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ListBox ItemsSource="{Binding SelectionDataObjects}"
                     Grid.Column="0"
                     SelectedItem="{Binding DataObjectSelected}"
                     ItemContainerStyle="{StaticResource {x:Type ListBoxItem}}">

                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Копировать выделенное"
                                  Command="{Binding CopyCommand}"
                                  CommandParameter="List" />
                    </ContextMenu>
                </ListBox.ContextMenu>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}">
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <GridSplitter Grid.Column="1"
                          ShowsPreview="False"
                          Width="3"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Stretch" />

            <DataGrid ItemsSource="{Binding Info}"
                      Grid.Column="2"
                      IsReadOnly="True"
                      SelectedItem="{Binding DataGridSelected}">

                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Копировать Name"
                                  Command="{Binding CopyCommand}"
                                  CommandParameter="DataGridSelectName" />
                        <MenuItem Header="Копировать Value"
                                  Command="{Binding CopyCommand}"
                                  CommandParameter="DataGridSelectValue" />
                        <MenuItem Header="Копировать строку"
                                  Command="{Binding CopyCommand}"
                                  CommandParameter="DataGridSelectLine" />
                    </ContextMenu>
                </DataGrid.ContextMenu>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Name"
                                            Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Key, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Value"
                                            Width="*">
                        <DataGridTemplateColumn.CellTemplate>

                            <DataTemplate>
                                <TextBlock>
                                <Hyperlink Command="{Binding DataContext.SelectedValueClickCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}">
                                    <TextBlock Text="{Binding Value.LookUpObject, Mode=OneWay}" />
                                </Hyperlink>
                            </TextBlock>
                            </DataTemplate>

                        </DataGridTemplateColumn.CellTemplate>

                    </DataGridTemplateColumn>
                </DataGrid.Columns>

            </DataGrid>

        </Grid>
    </Grid>

</controls:DialogWindow>
    
    
